name: Build & Tests
on: [push, pull_request]
jobs:
  macos:
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_12.5.app
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
          targets: aarch64-apple-ios aarch64-apple-ios-sim x86_64-apple-ios aarch64-apple-darwin x86_64-apple-darwin
      - name: Building XCFramework
        run: bash rust/scripts/build_binary_macos.sh release
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
      - name: Patching Package.swift for testing
        run: sed -i '' 's/let[[:blank:]]useLocalBinary[[:blank:]]=[[:blank:]]false/let useLocalBinary = true/g' Package.swift
      - name: Build and Test SPM
        run: swift test
        env:
          CARDANO_TEST_MNEMONIC: ${{ secrets.CARDANO_TEST_MNEMONIC }}
          CARDANO_TEST_BLOCKFROST_PROJECT_ID: ${{ secrets.CARDANO_TEST_BLOCKFROST_PROJECT_ID }}
          CARDANO_TEST_PUBLIC_KEY: ${{ secrets.CARDANO_TEST_PUBLIC_KEY }}
      - name: Update Cocoa Pods repo
        run: pod repo update
      - name: Copy binaries podspec for testing
        run: cp Cardano-Binaries.podspec LICENSE rust/binaries/
      - name: Build and Test CocoaPods
        run: pod lib lint --allow-warnings --fail-fast --include-podspecs=rust/binaries/Cardano-Binaries.podspec Cardano.swift.podspec
  linux:
    runs-on: ubuntu-latest
    container:
      image: swift:5.4
      options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --security-opt apparmor=unconfined
    steps:
      - name: Ubuntu Packages
        run: apt-get update && apt-get install -y software-properties-common && add-apt-repository -y ppa:git-core/ppa && apt-get update && apt-get upgrade -y git && apt-get install -y wget curl
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: Building Rust
        run: mkdir -p rust/binaries && bash rust/scripts/build_binary_linux.sh rust/binaries
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
      - name: Build and Test
        run: swift test -Xlinker -Lrust/binaries/lib -Xcc -Irust/binaries/include
        env:
          CARDANO_TEST_MNEMONIC: ${{ secrets.CARDANO_TEST_MNEMONIC }}
          CARDANO_TEST_BLOCKFROST_PROJECT_ID: ${{ secrets.CARDANO_TEST_BLOCKFROST_PROJECT_ID }}
          CARDANO_TEST_PUBLIC_KEY: ${{ secrets.CARDANO_TEST_PUBLIC_KEY }}
